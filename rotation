#!/usr/bin/python

import os
import sys
import iptc
import configparser

op = sys.argv[1]

config = configparser.ConfigParser()
config.read_file(open('/etc/rotation.conf'))

def port_mode():
  port = config.get('default','port')
  protocol = config.get('default','protocol')
  iptables_chain = config.get('default','iptables_chain')
  if protocol == 'tcp+udp':
    rule = {'protocol': 'tcp', 'target': 'DROP', protocol: {'dport': port}}
    rule2 = {'protocol': 'udp', 'target': 'DROP', protocol: {'dport': port}}
  else: 
    rule = {'protocol': protocol, 'target': 'DROP', protocol: {'dport': port}}
  if op == 'out':
    try:
      iptc.easy.insert_rule('filter', iptables_chain, rule)
      if protocol == 'tcp+udp':
        iptc.easy.insert_rule('filter', iptables_chain, rule2)
    except:
      return 1
    return 0
  elif op == 'in':
    try:
      iptc.easy.delete_rule('filter', iptables_chain, rule)
      if protocol == 'tcp+udp':
        iptc.easy.delete_rule('filter', iptables_chain, rule2)
    except:
      return 1
    return 0
  return 1

def health_mode():
  healthfile = config.get('default','health_file')
  healthcheck = config.get('default','health_check')
  filecontent_in = config.get('default','health_in_content') + '\n'
  filecontent_out = config.get('default','health_out_content') + '\n'
  if op == 'out':
    if healthcheck == 'content':
      try:
        file = open(healthfile,"w")
        file.write(filecontent_out)
        file.close()
      except:
        return 1
      return 0
    elif healthcheck == 'exists':
      try:
        os.remove(healthfile)
      except:
        return 1
      return 0
    else:
      return 1
  elif op == 'in':
    try:
      file = open(healthfile,"w")
      file.write(filecontent_in)
      file.close()
    except:
      return 1
    return 0
  return 1

mode = config.get('default','mode')


if mode == 'port':
  if port_mode() == 0:
    print('Success')
  else:
    print('Failed')
elif mode == 'health':
  if health_mode() == 0:
    print('Success')
  else:
    print('Failed')
else:
  print("Unknown mode, check configuration.")
